def combinationSum2(candidates, target):
    candidates.sort()  
    result = []
    
    def backtrack(start, current_combination, current_sum):
        if current_sum == target:
            result.append(list(current_combination))
            return
        if current_sum > target:
            return

        for i in range(start, len(candidates)):
            
            if i > start and candidates[i] == candidates[i - 1]:
                continue
            
            current_combination.append(candidates[i])
            
            backtrack(i + 1, current_combination, current_sum + candidates[i])
            current_combination.pop()  
    backtrack(0, [], 0)
    return result
candidates1 = [10, 1, 2, 7, 6, 1, 5]
target1 = 8
print(combinationSum2(candidates1, target1))  
candidates2 = [2, 5, 2, 1, 2]
target2 = 5
print(combinationSum2(candidates2, target2))  
