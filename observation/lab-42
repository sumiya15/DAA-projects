import heapq
class ListNode:
    def init(self, val=0, next=None):
        self.val = val
        self.next = next
def mergeKLists(lists):
    heap = []
    for l in lists:
        if l:
            heapq.heappush(heap, (l.val, l))
    dummy = ListNode()
    tail = dummy
    while heap:
        val, node = heapq.heappop(heap)
        tail.next = node
        tail = tail.next
        if node.next:
            heapq.heappush(heap, (node.next.val, node.next))
    return dummy.next
list1 = ListNode(1, ListNode(4, ListNode(5)))
list2 = ListNode(1, ListNode(3, ListNode(4)))
list3 = ListNode(2, ListNode(6))
lists = [list1, list2, list3]
merged_list = mergeKLists(lists)
while merged_list:
    print(merged_list.val, end=" -> ")
    merged_list = merged_list.next
