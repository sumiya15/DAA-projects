def longestNiceSubstring(s: str) -> str:
    def is_nice(sub: str) -> bool:
        unique_chars = set(sub)
        for char in unique_chars:
            if char.lower() not in unique_chars or char.upper() not in unique_chars:
                return False
        return True

    def find_longest_nice_substring(s: str) -> str:
        n = len(s)
        if n < 2:
            return ""
        
        for i in range(n):
            if s[i].lower() not in s or s[i].upper() not in s:
                left_nice = find_longest_nice_substring(s[:i])
                right_nice = find_longest_nice_substring(s[i+1:])
                return left_nice if len(left_nice) >= len(right_nice) else right_nice
        
        return s

    return find_longest_nice_substring(s)

# Example usage:
s = "YazaAay"
print(longestNiceSubstring(s))  # Output: "aAa"
