def maximum_subarray_sum(nums, k):
    n = len(nums)
    if k > n:
        return 0

    max_sum = 0
    window_start = 0
    window_sum = 0
    freq_map = {}

    for window_end in range(n):
        right_num = nums[window_end]
        if right_num not in freq_map:
            freq_map[right_num] = 0
        freq_map[right_num] += 1

        window_sum += right_num

        if window_end >= k - 1:
            if len(freq_map) == k:
                max_sum = max(max_sum, window_sum)

            left_num = nums[window_start]
            freq_map[left_num] -= 1
            if freq_map[left_num] == 0:
                del freq_map[left_num]

            window_sum -= left_num
            window_start += 1

    return max_sum
nums = [1, 5, 4, 2, 9, 9, 9]
k = 3
result = maximum_subarray_sum(nums, k)
print(result) 
