from sortedcontainers import SortedList

def containsNearbyAlmostDuplicate(nums, indexDiff, valueDiff):
    if indexDiff <= 0 or valueDiff < 0:
        return False

    sorted_list = SortedList()
    
    for i in range(len(nums)):
        # Ensure the sliding window size does not exceed indexDiff
        if i > indexDiff:
            sorted_list.remove(nums[i - indexDiff - 1])
        
        # Find the position where the current element would fit in the sorted list
        pos = sorted_list.bisect_left(nums[i] - valueDiff)
        
        # Check if there exists an element in the sorted list within the valueDiff range
        if pos < len(sorted_list) and abs(sorted_list[pos] - nums[i]) <= valueDiff:
            return True
        
        sorted_list.add(nums[i])
    
    return False

# Example usage:
nums = [1, 2, 3, 1]
indexDiff = 3
valueDiff = 0
print(containsNearbyAlmostDuplicate(nums, indexDiff, valueDiff))  # Output: True
